spring.application.name=alumni
# ===================================================================
# SERVER PROPERTIES
# ===================================================================
# The port where your Spring Boot application will run.
server.port=8080

# The context path for your application. All API endpoints will be prefixed with this path.
# Example: http://localhost:8080/alumni-api/auth/login
server.servlet.context-path=/alumni-api


# ===================================================================
# MYSQL DATASOURCE CONFIGURATION
# ===================================================================
# --- IMPORTANT: Fill in your database details below ---
spring.datasource.url=jdbc:mysql://localhost:3306/alumni_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=877896
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


# ===================================================================
# JPA / HIBERNATE CONFIGURATION
# ===================================================================
# The SQL dialect for MySQL 8+. This helps Hibernate generate optimized SQL.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# --- DDL-Auto Configuration (VERY IMPORTANT!) ---
# 'update': Hibernate automatically updates the schema based on your entities. Good for development.
# 'validate': Hibernate checks if the schema matches the entities and fails on mismatch. Good for production.
# 'none': Does nothing. Recommended for production where you manage schema with tools like Flyway or Liquibase.
# 'create': Drops and re-creates the schema on startup. Good for testing, DELETES ALL DATA.
spring.jpa.hibernate.ddl-auto=create

# --- Development & Debugging Settings ---
# Show the SQL statements generated by Hibernate in the console.
spring.jpa.show-sql=true

# Format the SQL shown in the console to be more readable.
spring.jpa.properties.hibernate.format_sql=true


# ===================================================================
# CUSTOM APPLICATION PROPERTIES
# ===================================================================
# These are examples of how you would store custom configuration values
# for your application's logic, such as JWT secrets or API keys.

# JWT configuration for security
app.jwt.secret=YourSuperSecretKeyForJWTsThatIsLongAndSecure12345
app.jwt.expiration-ms=86400000 # 24 hours in milliseconds

# Aadhaar API configuration (example)
app.aadhaar.api.key=your_aadhaar_service_api_key
app.aadhaar.api.url=https://api.example.com/aadhaar/verify


# ===================================================================
# DEPENDENCY REMINDER
# ===================================================================
# Remember to add the MySQL Connector dependency to your pom.xml file:
#
# <dependency>
#     <groupId>com.mysql</groupId>
#     <artifactId>mysql-connector-j</artifactId>
#     <scope>runtime</scope>
# </dependency>

